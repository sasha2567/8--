:-dynamic    %информирует интерпретатор о том, что  определения предикатов
      %могут изменяться в ходе выполнения программы
студент/7.  % формат: <имя предиката>/<кол-во аргументов>

% первоначальная  база, загружаемая при запуске программы
%	 N   Фам Имя	      Год рожд. Год пост. Ф. Мю Пр.
[студент(101, 'Лисянский Саша',   1994,	  2012,	  5, 5, 5),
студент(102, 'Икитян Руслан',    1995,    2012,	  4, 4, 4),
студент(103, 'Дядюшенко Сергей', 1994,    2012,   5, 4, 5),
студент(104, 'Золотарь Дима',    1995,    2012,   5, 4, 4),
студент(105, 'Устинова Таня',    1993,    2012,   4, 4, 4)].

start:- menu.  %предикат для запуска программы

%0============= отображение меню ==============================================
menu:-
  repeat, nl,
  write('*******************************'),nl,
  write('* 1. Добавление записи в БД   *'),nl,
  write('* 2. Удаление записи из БД    *'),nl,
  write('* 3. Выборка записей из БД    *'),nl,
  write('* 4. Просмотр БД              *'),nl,
  write('* 5. Загрузка БД из файла     *'),nl,
  write('* 6. Сохранение БД в файле    *'),nl,
  write('* 7. Поск студента по фамилии *'),nl,
  write('* 8. Выход                    *'),nl,
  write('*******************************'), nl ,nl,
  write('Введите номер пункта меню с точкой в конце!!!'),nl,
  read(C),nl,       %Ввод пункта меню
  proc(C),        %Запуск процедуры с номером С
  C=8,          %Если С не равно 8, то авт. возврат к repeat
  !.          %Иначе успешное завершение
%0-----------------------------------------------------------------------------

%1======= добавление записи в базу данных =====================================
proc(1):-
    write('Ввод завершайте точкой!!! :'),nl,
    write('Введите номер:'),nl, read(N),
    write('Введите фамилию и имя:'),nl, read(ФамИмя),
    write('Введите год рождения:'),nl, read(ГодР),
    write('Введите год поступления:'),nl, read(ГодП),
    write('Введите оцнеку по физике:'),nl, read(Ф),
    write('Введите оцнеку по математике:'),nl, read(М),
    write('Введите оцнеку по программированию:'),nl,read(Пр),
    assertz(студент(N,ФамИмя,ГодР,ГодП,Ф,М,Пр)), %добавление факта в БД
    write(ФамИмя),write(' был добавлен в БД'),nl,
    write('Введите любой символ'),nl,            %ожидание ввода литеры
    get0(_).
%1-----------------------------------------------------------------------------

%2========= удаление записи из базы данных ====================================
proc(2):-
    write('Введите номер для удаления студента'), nl,
    read(N),             %ввод номера сотрудника
    retract(студент(N,_,_,_,_,_,_,_)), %удаление записи о сотруднике
    write('Cтудент:'),tab(2),
    write(N), tab(2),                    %вывод сообщения об успешном удалении
    write('был успешно удален из БД'),nl,
    write('Введите любой символ'),nl,
    %get0(_),          %ожидание ввода символа
    !;            %отсечение альтернативы и завершение
    write('Такого студента:'),tab(2),   %вывод сообщения о безуспешном удалении
    write('в базе данных нет'),nl,
    write('Введите любой символ'),nl,
    get0(_).          %ожидание ввода символа
%2-----------------------------------------------------------------------------

%3====== выборка записи из базы данных по оценке ============================
proc(3):-
    retractall(flag(_)),        %удаление фактов - flag(_)
	(студент(N,ФамИмя,ГодР,ГодП,3,М,Пр);студент(N,ФамИмя,ГодР,ГодП,Ф,3,Пр);студент(N,ФамИмя,ГодР,ГодП,Ф,М,3)), %выбор записи о стденте
    assert(flag(1)),          %запомнить флаг  – запись найдена
    nl,
    write('Номер: '),  write(N),nl,
    write('Фамилия Имя: '), write(ФамИмя), tab(2),
    write('Год рождения: '), write(ГодР),nl,
    write('Год поступления: '), write(ГодП), tab(2),
    write('Оценка по физике: '), write(Ф),nl,
    write('Оценка по математике: '),write(М), tab(2),
    write('Оценка по программированию: '),write(Пр),nl,nl,
    write('Введите любой символ'),nl,
    get0(_),get0(_),
    fail;        %возврат для выбора след. записи
    flag(1),!.      %eсли записи были найдены, то завершить успешно

proc(3):-        %cообщение, если  записи не найдены
    write('В базе нет студентов троечников'),nl,
    write('Введите любой символ'),nl,
    get0(_).
%3-----------------------------------------------------------------------------

%4================== просмотр базы данных =====================================
proc(4):-
    студент(N,ФамИмя,ГодР,ГодП,Ф,М,Пр), %извлечение записи из БД
    nl,
    write('Номер: '),  write(N),nl,     %отображение на дисплее
	write('Фамилия Имя: '), write(ФамИмя), tab(2),
    write('Год рождения: '), write(ГодР),nl,
    write('Год поступления: '), write(ГодП), tab(2),
    write('Оценка по физике: '), write(Ф),nl,
    write('Оценка по математике: '),write(М), tab(2),
    write('Оенка по программированию: '),write(Пр),nl,nl,
    write('Введите любой символ'),nl,
    get0(_),get0(_),          %ожидание ввода символа
    fail;              %возврат к выбору записи
    true.              %завершение - записей больше нет
%4-----------------------------------------------------------------------------

%5======== загрузка базы данных из файла ======================================
proc(5):-
  see('d:/db_student.dat'),  %текущий входной поток - d:/db_student.dat
  retractall(студент(_,_,_,_,_,_,_)),%очистка БД от фактов "сотрудник"
  db_load,                  %загрузка БД термами из файла
      seen,                      %закрытие потока
      write('БД загружена из файла'),nl.

%загрузка термов в БД из открытого вх. потока
db_load:-
  read(Term),          %чтение терма
  (Term == end_of_file,!;      %если конец файла, то завершение
   assertz(Term),          %иначе добавить терм в конец БД
       db_load).           %рекурсивный вызов для чтения след. терма
%5-----------------------------------------------------------------------------

%6========== сохранение БД в файле ============================================
proc(6):-
 tell('d:/db_student.dat'),       %открытие вых. потока
 save_db(студент(N,ФамИмя,ГодР,ГодП,Ф,М,Пр)), %сохранение терма
 told,              %закрытие вых. потока
 write('БД скопирована в файл d:/db_student.dat'),nl.

%сохранение терма в открытом файле
 save_db(Term):-      %сохранение терма (факта!) Term в БД
      Term,           %отождествление терма с термом в БД
  write(Term),    %запись терма
  write('.'),nl,     %запись точки в конце терма
      fail;     %неудача с целью поиска след. варианта
      true.     %завершение, если вариантов отождествления нет
%6-----------------------------------------------------------------------------

%7====== выборка записи из базы данных по фамилии ============================
proc(7):-
    retractall(flag(_)),        %удаление фактов - flag(_)
	write('Введите фамилию и имя студента'), nl,
	read(Фам),nl,
	студент(N,Фам,ГодР,ГодП,Ф,М,Пр), %выбор записи о стденте
    assert(flag(1)),          %запомнить флаг  – запись найдена
    nl,
    write('Номер: '),  write(N),nl,
    write('Фамилия Имя: '), write(Фам), tab(2),
    write('Год рождения: '), write(ГодР),nl,
    write('Год поступления: '), write(ГодП), tab(2),
    write('Оценка по физике: '), write(Ф),nl,
    write('Оценка по математике: '),write(М), tab(2),
    write('Оценка по программированию: '),write(Пр),nl,nl,
    write('Введите любой символ'),nl,
    get0(_),get0(_),
    fail;        %возврат для выбора след. записи
    flag(1),!.      %eсли записи были найдены, то завершить успешно

proc(7):-        %cообщение, если  записи не найдены
    write('В базе нет студентов с такой фамилией'),nl,
    write('Введите любой символ'),nl,
    get0(_).
%7-----------------------------------------------------------------------------

%8============выход============================================================
proc(8):-write('Досвидания'),nl.
%8-----------------------------------------------------------------------------
